==33611== Memcheck, a memory error detector
==33611== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==33611== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==33611== Command: ./exeGNLleaks test.txt
==33611== 
==33611== Conditional jump or move depends on uninitialised value(s)
==33611==    at 0x1004F65E8: _platform_memchr$VARIANT$Base (in /usr/lib/system/libsystem_platform.dylib)
==33611==    by 0x1002A24D1: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==33611==    by 0x1002AC898: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==33611==    by 0x1002D2422: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==33611==    by 0x1002A833D: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==33611==    by 0x1002A6247: printf (in /usr/lib/system/libsystem_c.dylib)
==33611==    by 0x100002912: searchfd (in ./exeGNLleaks)
==33611==    by 0x1000023F3: check (in ./exeGNLleaks)
==33611==    by 0x100002171: get_next_line (in ./exeGNLleaks)
==33611==    by 0x100002790: main (in ./exeGNLleaks)
==33611==  Uninitialised value was created by a stack allocation
==33611==    at 0x1002A83C4: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==33611== 
==33611== 
==33611== HEAP SUMMARY:
==33611==     in use at exit: 22,308 bytes in 163 blocks
==33611==   total heap usage: 278,141 allocs, 277,978 frees, 19,852,810 bytes allocated
==33611== 
==33611== 72 bytes in 3 blocks are possibly lost in loss record 26 of 43
==33611==    at 0x10009BC8A: calloc (in /Users/vphongph/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==33611==    by 0x1005B5832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==33611==    by 0x1005C8D6A: map_images (in /usr/lib/libobjc.A.dylib)
==33611==    by 0x10000A03B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==33611==    by 0x10000A255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==33611==    by 0x10020300A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==33611==    by 0x1005B5072: _objc_init (in /usr/lib/libobjc.A.dylib)
==33611==    by 0x10019668D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==33611==    by 0x10019663A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==33611==    by 0x1000AA9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==33611==    by 0x10001AA1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==33611==    by 0x10001AC1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==33611== 
==33611== LEAK SUMMARY:
==33611==    definitely lost: 0 bytes in 0 blocks
==33611==    indirectly lost: 0 bytes in 0 blocks
==33611==      possibly lost: 72 bytes in 3 blocks
==33611==    still reachable: 200 bytes in 6 blocks
==33611==         suppressed: 22,036 bytes in 154 blocks
==33611== Reachable blocks (those to which a pointer was found) are not shown.
==33611== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==33611== 
==33611== For counts of detected and suppressed errors, rerun with: -v
==33611== ERROR SUMMARY: 4 errors from 2 contexts (suppressed: 12 from 12)
Fri Jan 18 23:45:12 CET 2019
